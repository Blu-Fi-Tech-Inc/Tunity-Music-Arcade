{"ast":null,"code":"const songHistoryReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"ADDSONG\":\n      const updatedSongs = state.filter(song => song.audioUrl !== action.song.audioUrl);\n      return [action.song, ...updatedSongs];\n    case \"ADDTONEXT\":\n      state.splice(action.pos + 1, 0, action.song);\n      return state;\n    default:\n      return state;\n  }\n};\nexport default songHistoryReducer;","map":{"version":3,"names":["songHistoryReducer","state","arguments","length","undefined","action","type","updatedSongs","filter","song","audioUrl","splice","pos"],"sources":["D:/PRIDE-Music-Arcade/frontend/src/redux/reducers/songHistory.js"],"sourcesContent":["const songHistoryReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADDSONG\":\n      const updatedSongs = state.filter(\n        (song) => song.audioUrl !== action.song.audioUrl\n      );\n\n      return [action.song, ...updatedSongs];\n    case \"ADDTONEXT\":\n      state.splice(action.pos + 1, 0, action.song);\n      return state;\n    default:\n      return state;\n  }\n};\nexport default songHistoryReducer;\n"],"mappings":"AAAA,MAAMA,kBAAkB,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC5C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,MAAMC,YAAY,GAAGN,KAAK,CAACO,MAAM,CAC9BC,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAKL,MAAM,CAACI,IAAI,CAACC,QAAQ,CACjD;MAED,OAAO,CAACL,MAAM,CAACI,IAAI,EAAE,GAAGF,YAAY,CAAC;IACvC,KAAK,WAAW;MACdN,KAAK,CAACU,MAAM,CAACN,MAAM,CAACO,GAAG,GAAG,CAAC,EAAE,CAAC,EAAEP,MAAM,CAACI,IAAI,CAAC;MAC5C,OAAOR,KAAK;IACd;MACE,OAAOA,KAAK;EAAC;AAEnB,CAAC;AACD,eAAeD,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}